import React from 'react';

import { Heading3, Link } from '../../../../components';
import { match } from 'ts-pattern';

import { Lauréat } from '@potentiel-domain/projet';
import { GetNatureDeLExploitationForProjectPage } from '../../../../../controllers/project/getProjectPage/_utils';

export type InfoNatureDeLExploitationProps = {
  data: GetNatureDeLExploitationForProjectPage;
};

export const InfoNatureDeLExploitation = ({ data }: InfoNatureDeLExploitationProps) => {
  return (
    <div className="flex flex-col gap-0">
      <Heading3 className="m-0">Nature de l'exploitation</Heading3>
      <span>
        {getNatureDeLExploitationTypeLabel(
          data.natureDeLExploitation.typeNatureDeLExploitation.formatter(),
        ) || 'Non renseigné'}
      </span>
      {data.natureDeLExploitation.tauxPrévisionnelACI !== undefined ? (
        <span>
          Taux prévisionnel d'autoconsommation individuelle :{' '}
          {data.natureDeLExploitation.tauxPrévisionnelACI} %
        </span>
      ) : null}
      {data.affichage && (
        <Link href={data.affichage.url} aria-label={data.affichage.label}>
          {data.affichage.label}
        </Link>
      )}
    </div>
  );
};

// duplicata du packages/applications/ssr/src/app/_helpers/getNatureDeLExploitationTypeLabel.ts
export const getNatureDeLExploitationTypeLabel = (
  type: Lauréat.NatureDeLExploitation.TypeDeNatureDeLExploitation.RawType,
): string =>
  match(type)
    .with('vente-avec-injection-du-surplus', () => 'Vente avec injection du surplus')
    .with('vente-avec-injection-en-totalité', () => 'Vente avec injection en totalité')
    .exhaustive();
