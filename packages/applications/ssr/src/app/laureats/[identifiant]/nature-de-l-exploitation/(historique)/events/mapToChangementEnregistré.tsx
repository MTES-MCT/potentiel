import { Lauréat } from '@potentiel-domain/projet';
import { Routes } from '@potentiel-applications/routes';
import { DocumentProjet } from '@potentiel-domain/document';

import { getNatureDeLExploitationTypeLabel } from '@/app/_helpers/getNatureDeLExploitationTypeLabel';
import { TimelineItemProps } from '@/components/organisms/timeline';
import { DownloadDocument } from '@/components/atoms/form/document/DownloadDocument';
import { ReadMore } from '@/components/atoms/ReadMore';

export const mapToChangementEnregistréTimelineItemsProps = (
  event: Lauréat.NatureDeLExploitation.ChangementNatureDeLExploitationEnregistréEvent,
): TimelineItemProps => {
  const {
    enregistréLe,
    enregistréPar,
    typeNatureDeLExploitation,
    tauxPrévisionnelACI,
    raison,
    pièceJustificative,
    identifiantProjet,
  } = event.payload;

  return {
    date: enregistréLe,
    title: "Nature de l'exploitation modifiée",
    acteur: enregistréPar,
    content: (
      <div className="flex flex-col gap-2">
        <div>
          Nouvelle nature de l'exploitation :{' '}
          <span className="font-semibold">
            {getNatureDeLExploitationTypeLabel(typeNatureDeLExploitation)}
          </span>
        </div>
        {tauxPrévisionnelACI !== undefined ? (
          <div>
            Taux d'autoconsommation individuelle prévisionnel :{' '}
            <span className="font-semibold">{tauxPrévisionnelACI} %</span>
          </div>
        ) : null}
        {raison && (
          <div>
            Raison : <ReadMore text={raison} className="font-semibold" />
          </div>
        )}
        {pièceJustificative && (
          <DownloadDocument
            className="mb-0"
            label="Télécharger la pièce justificative"
            format="pdf"
            url={Routes.Document.télécharger(
              DocumentProjet.convertirEnValueType(
                identifiantProjet,
                Lauréat.NatureDeLExploitation.TypeDocumentNatureDeLExploitation.pièceJustificative.formatter(),
                enregistréLe,
                pièceJustificative.format,
              ).formatter(),
            )}
          />
        )}
      </div>
    ),
  };
};
