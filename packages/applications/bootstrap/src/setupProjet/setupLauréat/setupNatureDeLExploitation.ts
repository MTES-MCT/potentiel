import {
  HistoriqueProjector,
  NatureDeLExploitationProjector,
} from '@potentiel-applications/projectors';
import { NatureDeLExploitationNotification } from '@potentiel-applications/notifications';

import { createSubscriptionSetup } from '../createSubscriptionSetup';
import { SetupProjet } from '../setup';

export const setupNatureDeLExploitation: SetupProjet = async ({ sendEmail }) => {
  const natureDeLExploitation = createSubscriptionSetup('natureDeLExploitation');

  NatureDeLExploitationProjector.register();

  await natureDeLExploitation.setupSubscription<
    NatureDeLExploitationProjector.SubscriptionEvent,
    NatureDeLExploitationProjector.Execute
  >({
    name: 'projector',
    eventType: [
      'RebuildTriggered',
      'NatureDeLExploitationImportée-V1',
      'NatureDeLExploitationModifiée-V1',
    ],
    messageType: 'System.Projector.Lauréat.NatureDeLExploitation',
  });

  NatureDeLExploitationNotification.register({ sendEmail });
  await natureDeLExploitation.setupSubscription<
    NatureDeLExploitationNotification.SubscriptionEvent,
    NatureDeLExploitationNotification.Execute
  >({
    name: 'notifications',
    eventType: ['NatureDeLExploitationModifiée-V1'],
    messageType: 'System.Notification.Lauréat.NatureDeLExploitation',
  });

  await natureDeLExploitation.setupSubscription<
    HistoriqueProjector.SubscriptionEvent,
    HistoriqueProjector.Execute
  >({
    name: 'history',
    eventType: 'all',
    messageType: 'System.Projector.Historique',
  });

  return natureDeLExploitation.clearSubscriptions;
};
