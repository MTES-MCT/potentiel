import { Message, MessageHandler, mediator } from 'mediateur';

import { HistoryRecord, ListHistory, RangeOptions } from '@potentiel-domain/entity';
import { NatureDeLExploitationEvent } from '../natureDeLExploitation.event';

export type HistoriqueNatureDeLExploitationProjetListItemReadModel = HistoryRecord<
  'natureDeLExploitation',
  NatureDeLExploitationEvent
>;

export type ListerHistoriqueNatureDeLExploitationProjetReadModel = {
  items: ReadonlyArray<HistoriqueNatureDeLExploitationProjetListItemReadModel>;
  range: RangeOptions;
  total: number;
};

export type ListerHistoriqueNatureDeLExploitationProjetQuery = Message<
  'Lauréat.NatureDeLExploitation.Query.ListerHistoriqueNatureDeLExploitationProjet',
  {
    identifiantProjet: string;
    range?: RangeOptions;
  },
  ListerHistoriqueNatureDeLExploitationProjetReadModel
>;

export type ListerHistoriqueNatureDeLExploitationProjetDependencies = {
  listHistory: ListHistory<HistoriqueNatureDeLExploitationProjetListItemReadModel>;
};

export const registerListerHistoriqueNatureDeLExploitationProjetQuery = ({
  listHistory,
}: ListerHistoriqueNatureDeLExploitationProjetDependencies) => {
  const handler: MessageHandler<ListerHistoriqueNatureDeLExploitationProjetQuery> = ({
    identifiantProjet,
    range,
  }) =>
    listHistory({
      id: identifiantProjet,
      category: 'natureDeLExploitation',
      range,
    });

  mediator.register(
    'Lauréat.NatureDeLExploitation.Query.ListerHistoriqueNatureDeLExploitationProjet',
    handler,
  );
};
