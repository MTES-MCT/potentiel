import { Lauréat } from '@potentiel-domain/projet';
import { IdentifiantProjet } from '@potentiel-domain/projet';
import { Option } from '@potentiel-libraries/monads';

import { LauréatWorld } from '../lauréat.world';
import { ModifierNatureDeLExploitationFixture } from './fixture/modifierNatureDeLExploitation.fixture';

export class NatureDeLExploitationWorld {
  #modifierNatureDeLExploitationFixture: ModifierNatureDeLExploitationFixture;
  get modifierNatureDeLExploitationFixture() {
    return this.#modifierNatureDeLExploitationFixture;
  }

  constructor(public readonly lauréatWorld: LauréatWorld) {
    this.#modifierNatureDeLExploitationFixture = new ModifierNatureDeLExploitationFixture();
  }

  mapToExpected(identifiantProjet: IdentifiantProjet.ValueType) {
    const natureDeLExploitationALaCandidature =
      this.lauréatWorld.candidatureWorld.importerCandidature.dépôtValue.natureDeLExploitation;

    if (!natureDeLExploitationALaCandidature) {
      return Option.none;
    }

    const expected: Lauréat.NatureDeLExploitation.ConsulterNatureDeLExploitationReadModel = {
      identifiantProjet,
      natureDeLExploitation: this.#modifierNatureDeLExploitationFixture.aÉtéCréé
        ? this.#modifierNatureDeLExploitationFixture.natureDeLExploitation
        : natureDeLExploitationALaCandidature,
    };

    return expected;
  }
}
