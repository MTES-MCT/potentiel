import { Lauréat } from '@potentiel-domain/projet';
import { DossierAccessor } from '../../graphql';

type GetNatureDeLExploitationProps<TDossier extends Record<string, string>> = {
  accessor: DossierAccessor<TDossier>;
  nomChampType: keyof TDossier;
  nomChampTaux: keyof TDossier;
};

const typeNatureDeLExploitationMapper = {
  'Vente avec injection du surplus': 'vente-avec-injection-du-surplus',
  'Vente avec injection en totalité': 'vente-avec-injection-en-totalité',
} satisfies Record<string, Lauréat.NatureDeLExploitation.TypeDeNatureDeLExploitation.RawType>;

export const getNatureDeLExploitation = <TDossier extends Record<string, string>>({
  accessor,
  nomChampType,
  nomChampTaux,
}: GetNatureDeLExploitationProps<TDossier>) => {
  const type = accessor.getStringValue(nomChampType);
  const taux = accessor.getNumberValue(nomChampTaux);

  if (type) {
    return {
      typeNatureDeLExploitation:
        typeNatureDeLExploitationMapper[type as keyof typeof typeNatureDeLExploitationMapper],
      tauxPrévisionnelACI: taux,
    };
  }
};
